name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64]
        goos: [linux, windows, darwin]
        exclude:
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build knockd (Linux only)
      if: matrix.goos == 'linux'
      run: |
        output_name="knockd-${{ matrix.goos }}-${{ matrix.goarch }}"
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${output_name} ./knockd

    - name: Build kk
      run: |
        output_name="kk-${{ matrix.goos }}-${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" == "windows" ]; then
          output_name="${output_name}.exe"
        fi
        if [ "${{ matrix.goos }}" == "windows" ]; then
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -tags windows_raw -o ${output_name} ./kk
        else
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${output_name} ./kk
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: |
          knockd-*_*
          kk-*_*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Prepare release files
      run: |
        mkdir -p release-files
        cp binaries-*/* release-files/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}